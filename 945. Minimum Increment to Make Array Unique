You are given an integer array nums. In one move, you can pick an index i where 0 <= i < nums.length and increment nums[i] by 1.
Return the minimum number of moves to make every value in nums unique.

Input: nums = [3,2,1,2,1,7]
Output: 6
Explanation: After 6 moves, the array could be [3, 4, 1, 2, 5, 7].
It can be shown with 5 or less moves that it is impossible for the array to have all unique values.

 int minIncrementForUnique(vector<int>& nums) {
     int n=nums.size();
        sort(nums.begin(),nums.end());
        int step=0;
        for(int i=1;i<n;i++)
        {
           if(nums[i]<=nums[i-1]) 
           {
               step+=nums[i-1]+1-nums[i];
               cout<<step;
               nums[i]=nums[i-1]+1;
           }
        }
        return step;
    }
